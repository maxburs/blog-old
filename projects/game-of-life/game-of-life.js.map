{"version":3,"sources":["src/game-of-life.js"],"names":["GameOfLife","React","createClass","getInitialState","height","width","interval","pause","boardKey","percentLife","handleChange","event","newState","target","name","value","checked","empty","resetBoard","setState","state","render","style","Board","undefined","props","window","setInterval","update","initialCellValues","size","i","push","Math","random","status","componentWillReceiveProps","nextProps","clearInterval","newStatus","forEach","alive","neighbors","top","left","right","bottom","editCell","cell","componentWillUnmount","cells","cellHeight","cellWidth","fontSize","cursor","FixedRatio","visibility","domNode","componentDidMount","remeasure","addEventListener","removeEventListener","clearTimeout","remeasureTimeout","setTimeout","run","bind","offsetWidth","offsetHeight","ratio","margin","paddingTop","newProps","console","log","updateDOMRef","node","childComponents","Cell","handleClick","index","backgroundColor","display","Controls","inputWrapStyle","padding","position","verticalAlign","textAlign","onload","ReactDOM","document","getElementById"],"mappings":"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","file":"game-of-life.js","sourcesContent":["//parent component, renders board and controls and connects the two\r\nvar GameOfLife = React.createClass({\r\n    //default board and control state\r\n    getInitialState: function(){\r\n        return {\r\n            height: 25,\r\n            width: 25,\r\n            interval: 500,\r\n            pause: false,\r\n            boardKey: 0,\r\n            percentLife: 0.3\r\n        };\r\n    },\r\n    //handles changes from input\r\n    handleChange: function(event){\r\n        var newState = {};\r\n        \r\n        if (event.target.name === \"interval\") {\r\n            //interval is set in second and needs to be converted to milliseconds\r\n            newState[event.target.name] = event.target.value * 1000;\r\n        }\r\n        else if (event.target.name === \"pause\") {\r\n            newState.pause = event.target.checked;\r\n        }\r\n        else if (event.target.name === \"randomize\") {\r\n            newState.empty = false;\r\n            this.resetBoard();\r\n        }\r\n        else if (event.target.name === \"clear\"){\r\n            newState.empty = true;\r\n            this.resetBoard();\r\n        }\r\n        else if (event.target.name === \"width\"){\r\n            newState.width = event.target.value;\r\n            this.resetBoard();\r\n        }\r\n        else if (event.target.name === \"height\"){\r\n            newState.height = event.target.value;\r\n            this.resetBoard();\r\n        }\r\n        else if (event.target.name === \"percentLife\"){\r\n            newState.percentLife = event.target.value;\r\n        }\r\n        this.setState(newState);\r\n    },\r\n    resetBoard: function(){\r\n        this.setState({boardKey: this.state.boardKey + 1});\r\n    },\r\n    render: function(){\r\n        var style = {\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n        };\r\n        return <div style={style}>\r\n            <div\r\n                style={{height: \"70%\", width: \"100%\"}}\r\n                \r\n                >\r\n                <FixedRatio\r\n                    childComponents={(\r\n                        <Board\r\n                            height={this.state.height}\r\n                            width={this.state.width}\r\n                            interval={this.state.interval}\r\n                            pause={this.state.pause}\r\n                            percentLife={this.state.percentLife}\r\n                            empty={this.state.empty}\r\n                            key={this.state.boardKey}\r\n                        />\r\n                    )}\r\n                    ratio={this.state.width/this.state.height}\r\n                />\r\n            </div>\r\n            <Controls\r\n                handleChange={this.handleChange}\r\n                height={this.state.height}\r\n                width={this.state.width}\r\n                interval={this.state.interval}\r\n                pause={this.state.pause}\r\n                percentLife={this.state.percentLife}\r\n                />\r\n            </div>;\r\n    }\r\n});\r\n//contains cells and game logic, accepts game parameters as props\r\n//props include: height={int}, width={int}, play={bool}, interval={float}, borderSize={int}\r\nvar Board = React.createClass({\r\n    getInitialState: function() {\r\n        //set inital board update rate if game is not paused\r\n        var interval = undefined;\r\n        if (this.props.pause === false) {\r\n            interval = window.setInterval(this.update, this.props.interval);\r\n        }\r\n\r\n        var initialCellValues = [];\r\n        var size = this.props.height * this.props.width;\r\n        for (var i=0; i < size; i++){\r\n            if (!this.props.empty){\r\n                initialCellValues.push(Math.random() < this.props.percentLife);\r\n            }\r\n            else {\r\n                initialCellValues.push(false);\r\n            }\r\n        }\r\n\r\n        return {status: initialCellValues, interval: interval};\r\n    },\r\n    //runs when prop(s) are updated\r\n    componentWillReceiveProps: function(nextProps){\r\n        window.clearInterval(this.state.interval);\r\n        var newState = {};\r\n\r\n        //if the new state isn't paused then once again set the interval\r\n        if (nextProps.pause === false){\r\n            newState.interval = window.setInterval(this.update, nextProps.interval);;\r\n        }\r\n\r\n        this.setState(newState);\r\n    },\r\n    //increments the game of life\r\n    update: function(){\r\n        //new game of life board status\r\n        var newStatus = [];\r\n        //loops though previous game board and pushes the status of cells to the new board one at a time\r\n        this.state.status.forEach(function(alive, i, status){\r\n            var neighbors = 0;\r\n            //determine if cell is on the top, left, right, or bottom of grid\r\n            var top = this.props.width - i > 0;\r\n            var left = i % this.props.width === 0;\r\n            var right = i % this.props.width === this.props.width - 1;\r\n            var bottom = (this.props.height * this.props.width) - i < this.props.width + 1;\r\n            /*console.log(\"cell \" + i + \" has properties:\"\r\n                + \"\\n   top = \" + top\r\n                + \"\\n   left = \" + left\r\n                + \"\\n   right = \" + right\r\n                + \"\\n   bottom = \" + bottom);*/\r\n                //check surrounding cells from top left clockwise and increment neighbors if alive\r\n                if (!top && !left && status[i - this.props.width - 1]){\r\n                    neighbors++;\r\n                }\r\n                if (!top && status[i - this.props.width]){\r\n                    neighbors++;\r\n                }\r\n                if (!top && !right && status[i - this.props.width + 1]){\r\n                    neighbors++;\r\n                }\r\n                if (!right && status[i + 1]){\r\n                    neighbors++;\r\n                }\r\n                if (!right && !bottom && status[i + this.props.width + 1]){\r\n                    neighbors++;\r\n                }\r\n                if (!bottom && status[i + this.props.width]){\r\n                    neighbors++;\r\n                }\r\n                if (!bottom && !left && status[i + this.props.width - 1]){\r\n                    neighbors++;\r\n                }\r\n                if (!left && status[i - 1]){\r\n                    neighbors++;\r\n                }\r\n                //console.log(\"cell \" + i + \" has \" + neighbors + \" neighbors\");\r\n                /*\r\n                RULES:\r\n                +  Any live cell with fewer than two live neighbours dies, as if caused by under-population.\r\n                +  Any live cell with two or three live neighbours lives on to the next generation.\r\n                +  Any live cell with more than three live neighbours dies, as if by over-population.\r\n                +  Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\r\n                following code executes rules\r\n                */\r\n                if (neighbors < 2){\r\n                    newStatus.push(false);\r\n                }\r\n                else if (neighbors === 2){\r\n                    if (alive){\r\n                        newStatus.push(true);\r\n                    }\r\n                    else {\r\n                        newStatus.push(false);\r\n                    }\r\n                }\r\n                else if (neighbors === 3){\r\n                    newStatus.push(true);\r\n                }\r\n                else {\r\n                    newStatus.push(false);\r\n                }\r\n        }, this);\r\n        this.setState({status: newStatus});\r\n    },\r\n    editCell: function(cell){\r\n        this.state.status[cell] = !this.state.status[cell];\r\n        this.setState({status: this.state.status});\r\n    },\r\n    componentWillUnmount: function(){\r\n        window.clearInterval(this.state.interval);\r\n    },\r\n    render: function(){\r\n        var cells = [];\r\n        var cellHeight = 100/this.props.height + \"%\";\r\n        var cellWidth = 100/this.props.width + \"%\";\r\n        for (var i = 0; i < this.props.height * this.props.width; i++) {\r\n            cells.push(\r\n                <Cell\r\n                    status={this.state.status[i] ? \"alive\" : \"dead\"}\r\n                    height={cellHeight}\r\n                    width={cellWidth}\r\n                    key={i}\r\n                    index={i}\r\n                    handleClick={this.editCell}\r\n                />\r\n            )\r\n        }\r\n        var style={\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontSize: \"0px\",\r\n            cursor: \"pointer\"\r\n        };\r\n        return <div style={style}>{cells}</div>;\r\n    }\r\n});\r\n//Creates a div of a given ratio (width/hight) as large as it can in the given context and then renders whatever is passed as the prop \"childComponents\" and it's children\". Has a 200ms resize timeout for performance.\r\n//props: include: ratio={width/height}, childComponents={compoenents to be rendered as children}\r\nvar FixedRatio = React.createClass({\r\n    getInitialState: function(){\r\n        return {style: {visibility: \"hidden\"}, domNode: undefined}\r\n    },\r\n    componentDidMount: function(){\r\n        this.remeasure();\r\n        window.addEventListener(\"resize\", this.remeasure);\r\n    },\r\n    componentWillUnmount: function(){\r\n        window.removeEventListener(\"resize\", this.remeasure);\r\n    },\r\n    remeasure: function(){\r\n        //timeout code so that we don't remeasure for every step while the window is being resized\r\n        window.clearTimeout(this.state.remeasureTimeout);\r\n        var remeasureTimeout = window.setTimeout(run.bind(this), 200);\r\n        this.setState({remeasureTimeout: remeasureTimeout})\r\n        function run(){\r\n            //if the context ratio is wider than the target ratio\r\n            if (this.state.domNode.offsetWidth / this.state.domNode.offsetHeight > this.props.ratio) {\r\n                this.setState({style: {\r\n                    height: this.state.domNode.offsetHeight + \"px\",\r\n                    width: (this.state.domNode.offsetHeight * this.props.ratio) + \"px\",\r\n                    margin: \"auto\"\r\n                }});\r\n            }\r\n            else {\r\n                this.setState({style: {\r\n                    height: (this.state.domNode.offsetWidth / this.props.ratio) + \"px\",\r\n                    width: this.state.domNode.offsetWidth,\r\n                    paddingTop: (this.state.domNode.offsetHeight - this.state.domNode.offsetWidth / this.props.ratio) / 2\r\n                }});\r\n            }\r\n        }\r\n    },\r\n    //if the ratio prop changes then remeasure, this is not in the \"render\" fuction because we do not want to remeaure when the childComponents prop changes\r\n    componentWillReceiveProps: function(newProps){\r\n        if (newProps.ratio !== this.props.ratio){\r\n            console.log(\"working...\");\r\n            this.remeasure();\r\n        }\r\n    },\r\n    updateDOMRef: function(node){\r\n        this.setState({domNode: node});\r\n    },\r\n    render: function(){\r\n        //returns a div that we will use to measure the space we have and a <div> that we will size depending on the ratio given\r\n        return <div\r\n                    style={{height: \"100%\", width: \"100%\"}}\r\n                    ref={this.updateDOMRef}\r\n                >\r\n            <div style={this.state.style}>\r\n                {this.props.childComponents}\r\n            </div>\r\n        </div>\r\n    }\r\n});\r\nvar Cell = React.createClass({\r\n    //lets Board know that cell has been clicked and gives it the cell index so it knows were the click was\r\n    handleClick: function(){\r\n        this.props.handleClick(this.props.index);\r\n    },\r\n    render: function(){\r\n        var style = {\r\n            backgroundColor: this.props.status === \"alive\" ? \"white\" : \"black\",\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            display: \"inline-block\",\r\n        };\r\n        return <div style={style} onClick={this.handleClick}/>\r\n    }\r\n});\r\nvar Controls = React.createClass({\r\n    render: function(){\r\n        var inputWrapStyle = {\r\n            display: \"inline-block\",\r\n            padding: \"10px\"\r\n        };\r\n        return <div style={{\r\n                            position: \"relative\",\r\n                            height: \"30%\"\r\n                        }}>\r\n            <div style={inputWrapStyle}>\r\n                <label\r\n                    style={{verticalAlign: \"middle\"}}>Refresh Delay (seconds)</label>\r\n                <input\r\n                    onChange={this.props.handleChange}\r\n                    style={{verticalAlign: \"middle\"}}\r\n                    type=\"range\"\r\n                    value={this.props.interval / 1000}\r\n                    name=\"interval\"\r\n                    min=\"0.1\"\r\n                    max=\"2\"\r\n                    step=\"0.1\"/>\r\n                <input\r\n                    name=\"interval\"\r\n                    onChange={this.props.handleChange}\r\n                    style={{\r\n                        verticalAlign: \"middle\",\r\n                        width: \"2em\"\r\n                    }}\r\n                    type=\"text\"\r\n                    value={this.props.interval / 1000}\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <label style={{verticalAlign: \"middle\"}}\r\n                    >Pause</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    style={{verticalAlign: \"middle\"}}\r\n                    onChange={this.props.handleChange}\r\n                    checked={this.props.pause}\r\n                    name=\"pause\"\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <input\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"randomize\"\r\n                    value=\"randomize\"\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <label\r\n                    style={{verticalAlign: \"middle\"}}>Life Odds</label>\r\n                <input\r\n                    onChange={this.props.handleChange}\r\n                    style={{verticalAlign: \"middle\"}}\r\n                    type=\"range\"\r\n                    defaultValue={this.props.percentLife}\r\n                    name=\"percentLife\"\r\n                    min=\"0\"\r\n                    max=\"1\"\r\n                    step=\"0.01\"/>\r\n                <span>{this.props.percentLife}</span>\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <input\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"clear\"\r\n                    value=\"clear\"\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <span>Width:</span>\r\n                <input\r\n                    type=\"number\"\r\n                    onChange={this.props.handleChange}\r\n                    name=\"width\"\r\n                    defaultValue={this.props.width}\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <span>Height:</span>\r\n                <input\r\n                    type=\"number\"\r\n                    onChange={this.props.handleChange}\r\n                    name=\"height\"\r\n                    defaultValue={this.props.height}\r\n                    />\r\n            </div>\r\n            <a\r\n                style={{\r\n                    margin: \"auto\",\r\n                    position: \"absolute\",\r\n                    bottom: \"0.5em\",\r\n                    left: \"0px\",\r\n                    right: \"0px\",\r\n                    display: \"block\",\r\n                    textAlign: \"center\"}}\r\n                href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\r\n                target=\"_blank\" >\r\n                https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\r\n            </a>\r\n        </div>\r\n    }\r\n});\r\nwindow.onload = function(){\r\n    ReactDOM.render(\r\n    <GameOfLife />,\r\n    document.getElementById(\"container\")\r\n    );\r\n};"]}