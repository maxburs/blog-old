{"version":3,"sources":["src/game-of-life.js"],"names":["GameOfLife","React","createClass","getInitialState","height","width","interval","pause","boardKey","percentLife","generations","nextHeight","nextWidth","handleChange","event","newState","target","name","value","checked","setState","empty","resetBoard","console","log","state","incrementGenereations","render","style","Board","undefined","props","window","setInterval","update","initialCellValues","size","i","push","Math","random","cellNeighbors","buildCellNeighbors","status","componentWillReceiveProps","nextProps","clearInterval","currentNeighbors","top","left","right","bottom","newStatus","neighbors","p","editCell","cell","componentWillUnmount","cells","cellHeight","cellWidth","fontSize","cursor","overflow","FixedRatio","visibility","domNode","componentDidMount","remeasure","addEventListener","removeEventListener","clearTimeout","remeasureTimeout","setTimeout","run","bind","offsetWidth","offsetHeight","ratio","margin","paddingTop","newProps","updateDOMRef","node","childComponents","Cell","handleClick","index","backgroundColor","display","Controls","vPad","hPad","inputWrapStyle","padding","elementStyle","verticalAlign","border","buttonStyle","textInputStyle","textAlign","position","maxWidth","toFixed","Object","assign","onload","ReactDOM","document","getElementById"],"mappings":"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","file":"game-of-life.js","sourcesContent":["//parent component, renders board and controls and connects the two\r\nvar GameOfLife = React.createClass({\r\n    //default board and control state\r\n    getInitialState: function(){\r\n        return {\r\n            height: 20,\r\n            width: 20,\r\n            interval: 500,\r\n            pause: false,\r\n            boardKey: 0,\r\n            percentLife: 0.3,\r\n            generations: 0,\r\n            nextHeight: 20,\r\n            nextWidth: 20\r\n        };\r\n    },\r\n    //handles changes from input\r\n    handleChange: function(event){\r\n        var newState = {};\r\n        \r\n        if (event.target.name === \"interval\") {\r\n            //interval is set in second and needs to be converted to milliseconds\r\n            newState[event.target.name] = event.target.value * 1000;\r\n        }\r\n        else if (event.target.name === \"pause\") {\r\n            newState.pause = event.target.checked;\r\n        }\r\n        else if (event.target.name === \"randomize\") {\r\n            this.setState({empty: false}, this.resetBoard);\r\n        }\r\n        else if (event.target.name === \"clear\"){\r\n            this.setState({empty: true}, this.resetBoard);\r\n        }\r\n        else if (event.target.name === \"width\"){\r\n            this.setState({nextWidth: +event.target.value});\r\n        }\r\n        else if (event.target.name === \"height\"){\r\n            this.setState({nextHeight: +event.target.value});\r\n        }\r\n        else if (event.target.name === \"percentLife\"){\r\n            newState.percentLife = event.target.value;\r\n        }\r\n        else if (event.target.name === \"resetGenerations\"){\r\n            newState.generations = 0;\r\n        }\r\n        else if (event.target.name === \"applySize\"){\r\n            console.log(\"this.state: \", this.state);\r\n            this.setState({\r\n                height: this.state.nextHeight,\r\n                width: this.state.nextWidth\r\n            }, this.resetBoard);\r\n        }\r\n        this.setState(newState);\r\n    },\r\n    //increases the generation count by one\r\n    incrementGenereations: function(){\r\n        this.setState({generations: this.state.generations + 1});\r\n    },\r\n    resetBoard: function(){\r\n        this.setState({boardKey: this.state.boardKey + 1, generations: 0});\r\n    },\r\n    render: function(){\r\n        var style = {\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n        };\r\n        return <div style={style}>\r\n            <div\r\n                style={{height: \"70%\", width: \"100%\"}}>\r\n                <FixedRatio\r\n                    childComponents={(\r\n                        <Board\r\n                            height={this.state.height}\r\n                            width={this.state.width}\r\n                            interval={this.state.interval}\r\n                            pause={this.state.pause}\r\n                            percentLife={this.state.percentLife}\r\n                            empty={this.state.empty}\r\n                            key={this.state.boardKey}\r\n                            incrementGenereations={this.incrementGenereations}\r\n                        />\r\n                    )}\r\n                    ratio={this.state.width/this.state.height}\r\n                />\r\n            </div>\r\n            <Controls\r\n                handleChange={this.handleChange}\r\n                height={this.state.nextHeight}\r\n                width={this.state.nextWidth}\r\n                interval={this.state.interval}\r\n                pause={this.state.pause}\r\n                percentLife={this.state.percentLife}\r\n                generations={this.state.generations}\r\n                />\r\n            </div>;\r\n    }\r\n});\r\n//contains cells and game logic, accepts game parameters as props\r\n//props include: height={int}, width={int}, play={bool}, interval={float}, borderSize={int}\r\nvar Board = React.createClass({\r\n    getInitialState: function() {\r\n        //set inital board update rate if game is not paused\r\n        var interval = undefined;\r\n        if (this.props.pause === false) {\r\n            interval = window.setInterval(this.update, this.props.interval);\r\n        }\r\n\r\n        var initialCellValues = [];\r\n        var size = this.props.height * this.props.width;\r\n        for (var i=0; i < size; i++){\r\n            if (!this.props.empty){\r\n                initialCellValues.push(Math.random() < this.props.percentLife);\r\n            }\r\n            else {\r\n                initialCellValues.push(false);\r\n            }\r\n        }\r\n        var cellNeighbors = this.buildCellNeighbors();\r\n        //console.log(\"cell neighbors: \", cellNeighbors);\r\n        return {status: initialCellValues, interval: interval, cellNeighbors: cellNeighbors};\r\n    },\r\n    //runs when prop(s) are updated\r\n    componentWillReceiveProps: function(nextProps){\r\n        window.clearInterval(this.state.interval);\r\n        var newState = {};\r\n        //if the new state isn't paused then once again set the interval\r\n        if (nextProps.pause === false){\r\n            newState.interval = window.setInterval(this.update, nextProps.interval);;\r\n        }\r\n        this.setState(newState);\r\n    },\r\n    //returns an array with filled with an array for each cell with the index of that cells neighbors\r\n    buildCellNeighbors: function(){\r\n        var cellNeighbors = [];\r\n        //this.state.status.forEach(function(alive, i, status){\r\n        for (var i = 0; i < this.props.height * this.props.width; i++) {\r\n            var currentNeighbors = [];\r\n            //determine if cell is on the top, left, right, or bottom of grid\r\n            var top = this.props.width - i > 0;\r\n            var left = i % this.props.width === 0;\r\n            var right = i % this.props.width === this.props.width - 1;\r\n            var bottom = (this.props.height - 1) * this.props.width < i + 1;\r\n            /*console.log(\"cell \" + i\r\n                + \"\\n   top: \" + top\r\n                + \"\\n   left: \" + left\r\n                + \"\\n   right: \" + right\r\n                + \"\\n   bottom: \" + bottom);*/\r\n            //for each potential neighbor, if that neighbor isn't off the grid then add it's index to the array\r\n            if (!top && !left){\r\n                currentNeighbors.push(i - this.props.width - 1);\r\n            }\r\n            if (!top){\r\n                currentNeighbors.push(i - this.props.width);\r\n            }\r\n            if (!top && !right){\r\n                currentNeighbors.push(i - this.props.width + 1);\r\n            }\r\n            if (!right){\r\n                currentNeighbors.push(i + 1);\r\n            }\r\n            if (!right && !bottom){\r\n                currentNeighbors.push(i + this.props.width + 1);\r\n            }\r\n            if (!bottom){\r\n                currentNeighbors.push(i + this.props.width);\r\n            }\r\n            if (!bottom && !left){\r\n                currentNeighbors.push(i + this.props.width - 1);\r\n            }\r\n            if (!left){\r\n                currentNeighbors.push(i - 1);\r\n            }\r\n            //console.log(\"neighbors: \" + currentNeighbors);\r\n            cellNeighbors.push(currentNeighbors);\r\n        }\r\n        return cellNeighbors;\r\n    },\r\n    //increments the game of life\r\n    update: function(){\r\n        //new game of life board status\r\n        var newStatus = [];\r\n        //loops though previous game board and pushes the status of cells to the new board one at a time\r\n        //this.state.status.forEach(function(alive, i, status){\r\n        for (var i in this.state.cellNeighbors){\r\n            var neighbors = 0;\r\n            //console.log(\"cell: \" + i);\r\n            for (var p in this.state.cellNeighbors[i]) {\r\n                if (this.state.status[this.state.cellNeighbors[i][p]]) {\r\n                    //console.log(\"   live neighbor at: \" + this.state.cellNeighbors[i][p]);\r\n                    neighbors++;\r\n                }\r\n            }\r\n            //console.log(\"   \" + neighbors + \" live neighbors\");\r\n            /*\r\n            RULES:\r\n            +  Any live cell with fewer than two live neighbours dies, as if caused by under-population.\r\n            +  Any live cell with two or three live neighbours lives on to the next generation.\r\n            +  Any live cell with more than three live neighbours dies, as if by over-population.\r\n            +  Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\r\n            following code executes rules\r\n            */\r\n            if (neighbors < 2){\r\n                newStatus.push(false);\r\n            }\r\n            else if (neighbors === 2){\r\n                if (this.state.status[i]){\r\n                    newStatus.push(true);\r\n                }\r\n                else {\r\n                    newStatus.push(false);\r\n                }\r\n            }\r\n            else if (neighbors === 3){\r\n                newStatus.push(true);\r\n            }\r\n            else {\r\n                newStatus.push(false);\r\n            }\r\n            //console.log(\"   new status: \", newStatus[newStatus.length - 1]);\r\n        };\r\n        //console.log(\"new status: \", newStatus);\r\n        this.props.incrementGenereations();\r\n        this.setState({status: newStatus});\r\n    },\r\n    editCell: function(cell){\r\n        this.state.status[cell] = !this.state.status[cell];\r\n        this.setState({status: this.state.status});\r\n    },\r\n    componentWillUnmount: function(){\r\n        window.clearInterval(this.state.interval);\r\n    },\r\n    render: function(){\r\n        var cells = [];\r\n        var cellHeight = 100/this.props.height + \"%\";\r\n        var cellWidth = 100/this.props.width + \"%\";\r\n        for (var i = 0; i < this.props.height * this.props.width; i++) {\r\n            cells.push(\r\n                <Cell\r\n                    status={this.state.status[i] ? \"alive\" : \"dead\"}\r\n                    height={cellHeight}\r\n                    width={cellWidth}\r\n                    key={i}\r\n                    index={i}\r\n                    handleClick={this.editCell}\r\n                />\r\n            )\r\n        }\r\n        var style={\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontSize: \"0px\",\r\n            cursor: \"pointer\",\r\n            overflow: \"hidden\"\r\n        };\r\n        return <div style={style}>{cells}</div>;\r\n    }\r\n});\r\n//Creates a div of a given ratio (width/hight) as large as it can in the given context and then renders whatever is passed as the prop \"childComponents\" and it's children\". Has a 200ms resize timeout for performance.\r\n//props: include: ratio={width/height}, childComponents={compoenents to be rendered as children}\r\nvar FixedRatio = React.createClass({\r\n    getInitialState: function(){\r\n        return {style: {visibility: \"hidden\"}, domNode: undefined}\r\n    },\r\n    componentDidMount: function(){\r\n        this.remeasure();\r\n        window.addEventListener(\"resize\", this.remeasure);\r\n    },\r\n    componentWillUnmount: function(){\r\n        window.removeEventListener(\"resize\", this.remeasure);\r\n    },\r\n    remeasure: function(){\r\n        //timeout code so that we don't remeasure for every step while the window is being resized\r\n        window.clearTimeout(this.state.remeasureTimeout);\r\n        var remeasureTimeout = window.setTimeout(run.bind(this), 200);\r\n        this.setState({remeasureTimeout: remeasureTimeout})\r\n        function run(){\r\n            //if the context ratio is wider than the target ratio\r\n            if (this.state.domNode.offsetWidth / this.state.domNode.offsetHeight > this.props.ratio) {\r\n                this.setState({style: {\r\n                    height: this.state.domNode.offsetHeight + \"px\",\r\n                    width: (this.state.domNode.offsetHeight * this.props.ratio) + \"px\",\r\n                    margin: \"auto\"\r\n                }});\r\n            }\r\n            else {\r\n                this.setState({style: {\r\n                    height: (this.state.domNode.offsetWidth / this.props.ratio) + \"px\",\r\n                    width: this.state.domNode.offsetWidth,\r\n                    paddingTop: (this.state.domNode.offsetHeight - this.state.domNode.offsetWidth / this.props.ratio) / 2\r\n                }});\r\n            }\r\n        }\r\n    },\r\n    //if the ratio prop changes then remeasure, this is not in the \"render\" fuction because we do not want to remeaure when the childComponents prop changes\r\n    componentWillReceiveProps: function(newProps){\r\n        if (newProps.ratio !== this.props.ratio){\r\n            this.remeasure();\r\n        }\r\n    },\r\n    updateDOMRef: function(node){\r\n        this.setState({domNode: node});\r\n    },\r\n    render: function(){\r\n        //returns a div that we will use to measure the space we have and a <div> that we will size depending on the ratio given\r\n        return <div\r\n                    style={{height: \"100%\", width: \"100%\"}}\r\n                    ref={this.updateDOMRef}\r\n                >\r\n            <div style={this.state.style}>\r\n                {this.props.childComponents}\r\n            </div>\r\n        </div>\r\n    }\r\n});\r\nvar Cell = React.createClass({\r\n    //lets Board know that cell has been clicked and gives it the cell index so it knows were the click was\r\n    handleClick: function(){\r\n        this.props.handleClick(this.props.index);\r\n    },\r\n    render: function(){\r\n        var style = {\r\n            backgroundColor: this.props.status === \"alive\" ? \"white\" : \"black\",\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            display: \"inline-block\",\r\n        };\r\n        return <div style={style} onClick={this.handleClick}/>\r\n    }\r\n});\r\nvar Controls = React.createClass({\r\n    render: function(){\r\n        var vPad = \"3px\"\r\n        var hPad = \"5px\"\r\n        var inputWrapStyle = {\r\n            display: \"inline-block\",\r\n            backgroundColor: \"rgb(240, 240, 240)\",\r\n            padding: vPad + \" 0px 0px \" + hPad,\r\n            margin: \"4px 6px\"\r\n        };\r\n        var elementStyle = {\r\n            verticalAlign: \"middle\",\r\n            border: \"none\",\r\n            padding: \"0px \" + hPad + \" \" + vPad + \" 0px\"\r\n        };\r\n        var buttonStyle = {\r\n            fontSize: \"14px\",\r\n            verticalAlign: \"middle\",\r\n            margin: \"0px \" + hPad + \" \" + vPad + \" 0px\",\r\n            display: \"inline-block\"\r\n        };\r\n        var textInputStyle = {\r\n            verticalAlign: \"middle\",\r\n            border: \"none\",\r\n            fontSize: \"inherit\",\r\n            padding: vPad + \" \" + hPad,\r\n            textAlign: \"center\",\r\n            margin: \"0px \" + hPad + \" \" + vPad + \" 0px\"\r\n        };\r\n        return <div style={{\r\n                            position: \"relative\",\r\n                            height: \"30%\",\r\n                            maxWidth: \"600px\",\r\n                            margin: \"auto\",\r\n                            fontSize: \"16px\",\r\n                            overflow: \"auto\"\r\n                        }}>\r\n            <div style={inputWrapStyle}>\r\n                <label\r\n                    style={elementStyle}>Refresh Delay</label>\r\n                <input\r\n                    onChange={this.props.handleChange}\r\n                    style={elementStyle}\r\n                    type=\"range\"\r\n                    value={this.props.interval / 1000}\r\n                    name=\"interval\"\r\n                    min=\"0.05\"\r\n                    max=\"1\"\r\n                    step=\"0.05\"/>\r\n                <span style={elementStyle} >\r\n                    {(this.props.interval / 1000).toFixed(2)} seconds\r\n                    </span>\r\n            </div>\r\n            <div style={inputWrapStyle} >\r\n                <span style={elementStyle} >Generations:</span>\r\n                <span style={Object.assign({}, elementStyle, {width: \"3em\", textAlign: \"right\", display: \"inline-block\"})}>{this.props.generations}</span>\r\n                <input\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"resetGenerations\"\r\n                    value=\"reset\" />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <label style={elementStyle}\r\n                    >Pause</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    style={elementStyle}\r\n                    onChange={this.props.handleChange}\r\n                    checked={this.props.pause}\r\n                    name=\"pause\"\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <input\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"clear\"\r\n                    value=\"clear\"\r\n                    />\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <input\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"randomize\"\r\n                    value=\"randomize\"\r\n                    />\r\n                <input\r\n                    onChange={this.props.handleChange}\r\n                    style={elementStyle}\r\n                    type=\"range\"\r\n                    defaultValue={this.props.percentLife}\r\n                    name=\"percentLife\"\r\n                    min=\"0\"\r\n                    max=\"1\"\r\n                    step=\"0.01\"/>\r\n                <span style={elementStyle}>{this.props.percentLife * 100}%</span>\r\n            </div>\r\n            <div style={inputWrapStyle}>\r\n                <span\r\n                    style={elementStyle}>\r\n                    Size:</span>\r\n                <input\r\n                    style={Object.assign({}, textInputStyle, {width: \"2.5em\"})}\r\n                    type=\"number\"\r\n                    onChange={this.props.handleChange}\r\n                    name=\"width\"\r\n                    defaultValue={this.props.width}\r\n                    />\r\n                <span\r\n                    style={elementStyle}>\r\n                    x</span>\r\n                <input\r\n                    style={Object.assign({}, textInputStyle, {width: \"2.5em\"})}\r\n                    type=\"number\"\r\n                    onChange={this.props.handleChange}\r\n                    name=\"height\"\r\n                    defaultValue={this.props.height}\r\n                    />\r\n                <input\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={this.props.handleChange}\r\n                    name=\"applySize\"\r\n                    value=\"Apply\"\r\n                    />\r\n            </div>\r\n        </div>\r\n    }\r\n});\r\nwindow.onload = function(){\r\n    ReactDOM.render(\r\n    <GameOfLife />,\r\n    document.getElementById(\"container\")\r\n    );\r\n};"]}